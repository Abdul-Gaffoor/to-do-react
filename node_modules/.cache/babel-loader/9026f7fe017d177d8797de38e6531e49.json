{"ast":null,"code":"import _toConsumableArray from \"/home/abdul/Desktop/react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/abdul/Desktop/react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abdul/Desktop/react/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Todo.css';\n\nfunction Task(_ref) {\n  var task = _ref.task,\n      index = _ref.index,\n      completeTask = _ref.completeTask,\n      removeTask = _ref.removeTask;\n  return React.createElement(\"div\", {\n    className: \"task\",\n    style: {\n      textDecoration: task.completed ? \"line-through\" : \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, task.title, React.createElement(\"button\", {\n    style: {\n      background: \"red\"\n    },\n    onClick: function onClick() {\n      return removeTask(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return completeTask(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Complete\"));\n}\n\nfunction CreateTask(_ref2) {\n  var addTask = _ref2.addTask;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue(\"\");\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add a new task\",\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nfunction Todo() {\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasksRemaining = _useState4[0],\n      setTasksRemaining = _useState4[1];\n\n  var _useState5 = useState([{\n    title: \"Grab some Pizza\",\n    completed: true\n  }, {\n    title: \"Do your workout\",\n    completed: true\n  }, {\n    title: \"Hangout with friends\",\n    completed: false\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tasks = _useState6[0],\n      setTasks = _useState6[1];\n\n  useEffect(function () {\n    setTasksRemaining(tasks.filter(function (task) {\n      return !task.completed;\n    }).length);\n  });\n\n  var addTask = function addTask(title) {\n    var newTasks = [].concat(_toConsumableArray(tasks), [{\n      title: title,\n      completed: false\n    }]);\n    setTasks(newTasks);\n  };\n\n  var completeTask = function completeTask(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  var removeTask = function removeTask(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Pending tasks (\", tasksRemaining, \")\"), React.createElement(\"div\", {\n    className: \"tasks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, tasks.map(function (task, index) {\n    return React.createElement(Task, {\n      task: task,\n      index: index,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"create-task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(CreateTask, {\n    addTask: addTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/abdul/Desktop/react/src/components/Todo.js"],"names":["React","useState","useEffect","Task","task","index","completeTask","removeTask","textDecoration","completed","title","background","CreateTask","addTask","value","setValue","handleSubmit","e","preventDefault","target","Todo","tasksRemaining","setTasksRemaining","tasks","setTasks","filter","length","newTasks","splice","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Todo.css';\n\n\nfunction Task({ task, index, completeTask, removeTask }) {\n    return (\n        <div\n            className=\"task\"\n            style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n        >\n            {task.title}\n\n            <button style={{ background: \"red\" }} onClick={() => removeTask(index)}>x</button>\n            <button onClick={() => completeTask(index)}>Complete</button>\n\n        </div>\n    );\n}\n\nfunction CreateTask({ addTask }) {\n    const [value, setValue] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addTask(value);\n        setValue(\"\");\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"Add a new task\"\n                onChange={e => setValue(e.target.value)}\n            />\n        </form>\n    );\n}\n\nfunction Todo() {\n    const [tasksRemaining, setTasksRemaining] = useState(0);\n    const [tasks, setTasks] = useState([\n        {\n            title: \"Grab some Pizza\",\n            completed: true\n        },\n        {\n            title: \"Do your workout\",\n            completed: true\n        },\n        {\n            title: \"Hangout with friends\",\n            completed: false\n        }\n    ]);\n\n    useEffect(() => { setTasksRemaining(tasks.filter(task => !task.completed).length) });\n\n\n    const addTask = title => {\n        const newTasks = [...tasks, { title, completed: false }];\n        setTasks(newTasks);\n    };\n\n    const completeTask = index => {\n        const newTasks = [...tasks];\n        newTasks[index].completed = true;\n        setTasks(newTasks);\n    };\n\n    const removeTask = index => {\n        const newTasks = [...tasks];\n        newTasks.splice(index, 1);\n        setTasks(newTasks);\n    };\n\n    return (\n        <div className=\"todo-container\">\n            <div className=\"header\">Pending tasks ({tasksRemaining})</div>\n            <div className=\"tasks\">\n                {tasks.map((task, index) => (\n                    <Task\n                    task={task}\n                    index={index}\n                    completeTask={completeTask}\n                    removeTask={removeTask}\n                    key={index}\n                    />\n                ))}\n            </div>\n            <div className=\"create-task\" >\n                <CreateTask addTask={addTask} />\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}